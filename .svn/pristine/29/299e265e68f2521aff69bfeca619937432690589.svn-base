using System;using System.Collections.Generic;using System.Diagnostics;using System.Linq;using System.Text;using System.Security.Cryptography;using Negocio.Utilidades;namespace Negocio.Seguridad{    public class MetodosEncriptacion    {        /// <summary>        /// Encripta a MD5 una cadena de texto.        /// </summary>        /// <param name="value">Valor a encriptar</param>        /// <returns>Valor encriptado</returns>        public static string EncriptarMD5(string value)        {            try            {                // step 1, calculate MD5 hash from input                var md5 = System.Security.Cryptography.MD5.Create();                byte[] inputBytes = System.Text.Encoding.ASCII.GetBytes(value);                byte[] hash = md5.ComputeHash(inputBytes);                // step 2, convert byte array to hex string                var sb = new StringBuilder();                foreach (byte t in hash)                {                    sb.Append(t.ToString("X2"));                }                return sb.ToString().ToLower();            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo encriptar la cadena ingresada. " + ex, EventLogEntryType.Error);                throw new Exception("No se pudo encriptar la cadena ingresada. " + ex.Message);            }        }        /// Encripta una cadena        public static string EncriptarBase64(string _cadenaAencriptar)        {            string result = string.Empty;            byte[] encryted = System.Text.Encoding.Unicode.GetBytes(_cadenaAencriptar);            result = Convert.ToBase64String(encryted);            return result;        }        /// Esta funcion desencripta la cadena que le enviamos en el paramentro de entrada.        public static string DesencriptarBase64(string _cadenaAdesencriptar)        {            string result = string.Empty;            byte[] decryted = Convert.FromBase64String(_cadenaAdesencriptar);            //result = System.Text.Encoding.Unicode.GetString(decryted, 0, decryted.ToArray().Length);            result = System.Text.Encoding.Unicode.GetString(decryted);            return result;        }    }}
