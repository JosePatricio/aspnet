using System;using System.Collections.Generic;using System.Diagnostics;using System.Linq;using System.Runtime.InteropServices;using System.Transactions;using Negocio.Utilidades;using PersistenciaSigeor;using System.Globalization;using Negocio.Job;namespace Negocio.Reportes{    public class ReporteEorEstructuraNegocio    {        public static List<GET_CABECERA_EOR_ESTRUCTURA_Result> ObtenerEorCabeceraPorFiltros(string parametros)        {            if (string.IsNullOrEmpty(parametros))                return null;            List<GET_CABECERA_EOR_ESTRUCTURA_Result> result;            try            {                var param = Serializador.DeSerializeEntity<ClaseBasica>(parametros);                TransactionOptions transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                if (!string.IsNullOrEmpty(param.DescripcionUno))                {                    EorEstructuraProcesoNegocio.VerificarEorEstructura(param.DescripcionUno);                }                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = context.GET_CABECERA_EOR_ESTRUCTURA(param.Descripcion, param.DescripcionUno,                            param.DescripcionDos, param.DescripcionTres, param.DescripcionCuatro, param.DescripcionCinco,                            param.FechaDateTimeStringUno, param.FechaDateTimeStringDos, param.IdStringUno, param.IdStringDos).ToList();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener los EORs de Cabecera Estructura: " + ex, EventLogEntryType.Error);                throw new Exception("No se pudo obtener los EORs de Cabecera Estructura: " + ex.Message);            }            return result;//.Any() ? Serializador.SerializeEntity(result) : null;        }        public static string ObtenerEorCabeceraPorFiltrosPaginado(string parametros, int pagesize, int pageIndex, out int totalRegistros)        {            if (string.IsNullOrEmpty(parametros))            {                totalRegistros = 0;                return null;            }            List<GET_CABECERA_EOR_ESTRUCTURA_Result> result;            try            {                var param = Serializador.DeSerializeEntity<ClaseBasica>(parametros);                if (!string.IsNullOrEmpty(param.DescripcionUno))                {                    EorEstructuraProcesoNegocio.VerificarEorEstructura(param.DescripcionUno);                }                TransactionOptions transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = context.GET_CABECERA_EOR_ESTRUCTURA(param.Descripcion, param.DescripcionUno,                        param.DescripcionDos, param.DescripcionTres, param.DescripcionCuatro, param.DescripcionCinco,                        param.FechaDateTimeStringUno, param.FechaDateTimeStringDos, param.IdStringUno, param.IdStringDos).ToList();                    }                    transactionScope.Complete();                }                totalRegistros = result.Count;                result = result.Skip(pagesize * (pageIndex-1)).Take(pagesize).ToList();            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener los EORs de Cabecera Estructura Paginado:  " + ex, EventLogEntryType.Error);                throw new Exception("No se pudo obtener los EORs de Cabecera de Estructura Paginado : " + ex.Message);            }            return result.Any() ? Serializador.SerializeEntity(result) : null;        }        public static List<GET_DETALLE_EOR_ESTRUCTURA_Result> ObtenerEorDetallePorNumeroEor(string numEor)        {            List<GET_DETALLE_EOR_ESTRUCTURA_Result> result;            try            {                TransactionOptions transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = context.GET_DETALLE_EOR_ESTRUCTURA(numEor).ToList();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener los EORs por Detalle de Estructura: " + ex, EventLogEntryType.Error);                throw new Exception("No se pudo obtener los EORs por Detalle de Estructura: " + ex.Message);            }            return result;        }            }}
