using System;using System.Collections.Generic;using System.Linq;using System.Text;using System.Transactions;using Negocio.Utilidades;using PersistenciaSigeor;using System.Diagnostics;namespace Negocio.Sigeor.GestionMgl{    public class TipoContenedor    {        public static string ObtenerTipoContenedorPorEstado(string estado)        {            List<SM_TIPCONTAINER> result;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from tipcont in context.SM_TIPCONTAINER                                  orderby tipcont.NOM_TIPCONT                                  where tipcont.ESTADO.Equals(estado)                                  select tipcont).ToList();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener los tipos de contenedores por estado: " + ex, EventLogEntryType.Error);                throw new Exception("No se pudo obtener los tipos de contenedores por estado: " + ex);            }            return result.Any() ? Serializador.SerializeEntity(result) : null;        }        public static string ObtenerTipoContenedorPorTipoEstado(string parametroSerializado)        {            List<SM_TIPCONTAINER> result;            try            {                if (string.IsNullOrEmpty(parametroSerializado))                    return null;                    var transactionOptions = new TransactionOptions                {                    IsolationLevel = IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                                            var param = Serializador.DeSerializeEntity<ClaseBasica>(parametroSerializado);                                        using (var context = new SigeorEntities())                    {                        result = (from tipcont in context.SM_TIPCONTAINER                                  orderby tipcont.NOM_TIPCONT                                  where tipcont.ESTADO == param.EstadoString && tipcont.ESREEFER.Contains(param.Descripcion)                                  select tipcont).ToList();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener los tipos de contenedores por tipo y estado: " + ex, EventLogEntryType.Error);                throw new Exception("No se pudo obtener los tipos de contenedores tipo y estado: " + ex);            }            return result.Any() ? Serializador.SerializeEntity(result) : null;        }    }}
