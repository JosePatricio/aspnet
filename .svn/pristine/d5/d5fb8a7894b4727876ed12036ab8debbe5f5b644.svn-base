using System;using System.Collections.Generic;using System.Linq;using System.Text;using PersistenciaSigeor;using System.Transactions;using System.Collections;using Negocio.Utilidades;using System.Reflection;using System.Diagnostics;namespace Negocio.Reportes{    public class ReportesPTI    {        public static string ObtenerDatosPTIPaginado(string parametros, int pagesize, int pageIndex, out int totalRegistros)        {            List<GET_PTI_Result> result;            var param = Serializador.DeSerializeEntity<ClaseBasica>(parametros);            try            {                TransactionOptions transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = context.GET_PTI(                            param.DescripcionUno,                            param.DescripcionDos,                            param.DescripcionTres,                            param.DescripcionCuatro,                            param.DescripcionCinco,                            param.FechaDateTimeStringUno,                            param.FechaDateTimeStringDos).ToList();                    }                    transactionScope.Complete();                }                totalRegistros = result.Count;                result = result.Skip(pagesize * (pageIndex-1)).Take(pagesize).ToList();            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener los PTI's Paginado: " + ex, EventLogEntryType.Error);                throw new Exception("No se pudo obtener los PTI's Paginado: " + ex.Message);            }            return result.Any() ? Serializador.SerializeEntity(result) : null;        }        public static string ObtenerDatosPTIReporte(string parametros)        {            List<GET_PTI_Result> result;            var param = Serializador.DeSerializeEntity<ClaseBasica>(parametros);            try            {                TransactionOptions transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = context.GET_PTI(                            param.DescripcionUno,                            param.DescripcionDos,                            param.DescripcionTres,                            param.DescripcionCuatro,                            param.DescripcionCinco,                            param.FechaDateTimeStringUno,                            param.FechaDateTimeStringDos).ToList();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener los PTI's: " + ex, EventLogEntryType.Error);                throw new Exception("No se pudo obtener los PTI's: " + ex.Message);            }            return result.Any() ? Serializador.SerializeEntity(result) : null;        }        public static string ObtenerDatosPTI_EIR_Reporte(string parametros)        {            List<GET_PTI_EIR_Result> result;            var param = Serializador.DeSerializeEntity<ClaseBasica>(parametros);            try            {                TransactionOptions transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = context.GET_PTI_EIR(param.Descripcion).ToList();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener los PTI's Reporte: " + ex, EventLogEntryType.Error);                throw new Exception("No se pudo obtener los PTI's Reporte: " + ex.Message);            }            return result.Any() ? Serializador.SerializeEntity(result) : null;        }    }}