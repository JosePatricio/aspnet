using System;using System.Collections.Generic;using System.Linq;using System.Text;using Negocio.Utilidades;using PersistenciaSigeor;using System.Transactions;using System.Diagnostics;namespace Negocio.Autenticacion{    public class GestionAutenticacion    {        /// Autentica un usuario por sus credenciales, la busqueda siempre sera de Usuario activos        public static string ObtenerUsuarioPorCredenciales(string nombreUsuario, string contrasenia)        {            Usuario result;            try            {                TransactionOptions transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from usuario in context.Usuario                                  where                                      usuario.NombreUsuario == nombreUsuario && usuario.Contrasenia == contrasenia &&                                      usuario.Estado == true                                  select usuario).FirstOrDefault();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo realizar la busqueda del usuario: " + ex, EventLogEntryType.Error);                throw new Exception("No se pudo realizar la busqueda del usuario: " + ex.Message);            }            return result != null ? Serializador.SerializeEntity(result) : null;        }        public static string ObtenerUsuarioPorEmail(string emailUsuario, string eKey)        {            Usuario result;            try            {                TransactionOptions transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from usuario in context.Usuario                                  where                                      usuario.Email == emailUsuario && usuario.Estado == true                                  select usuario).FirstOrDefault();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo realizar la busqueda del usuario por email: " + ex, EventLogEntryType.Error);                throw new Exception("No se pudo realizar la busqueda del usuario por email: " + ex.Message);            }            return result != null ? Serializador.SerializeEntity(result) : null;        }    }}
