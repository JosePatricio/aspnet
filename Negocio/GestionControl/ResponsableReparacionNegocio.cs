                    using System;using System.Linq;using System.Transactions;using Negocio.Utilidades;using PersistenciaSigeor;using System.Diagnostics;namespace Negocio.Sigeor.GestionMgl{    public class ResponsableReparacionNegocio    {        public static string ObtenerResponsablesReparacion()        {            string result;            try            {                TransactionOptions transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        var query = (from responsable in context.S_ESTIMATE_PARTY_RESPON                                     orderby responsable.DESCRIP                                     select responsable).ToList();                        result = query.Any() ? Serializador.SerializeEntity(query) : null;                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener los responsables: " + ex, EventLogEntryType.Error);                throw new Exception("No se pudo obtener los responsables: " + ex);            }            return result;        }        public static string ObtenerResponsablePorCodigo(string parametro)        {            string result;            try            {                var param = Serializador.DeSerializeEntity<ClaseBasica>(parametro);                var transactionOptions = new TransactionOptions                {                    IsolationLevel = IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        var query = (from responsable in context.S_ESTIMATE_PARTY_RESPON                                     where responsable.COD_PARTY.Equals(param.IdStringUno)                                     select responsable).FirstOrDefault();                        result = query != null ? Serializador.SerializeEntity(query) : null;                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener el responsable: " + ex, EventLogEntryType.Error);                throw new Exception("No se pudo obtener el responsable: " + ex);            }            return result;        }    }}
