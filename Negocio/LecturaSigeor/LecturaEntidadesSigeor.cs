using Negocio.Sigeor.Configuracion;using Negocio.Utilidades;using PersistenciaAretina;using PersistenciaSigeor;using System;using System.Collections.Generic;using System.Diagnostics;using System.Linq;using System.Text;using System.Transactions;namespace Negocio.LecturaSigeor{    public class LecturaEntidadesSigeor    {




        #region LECTURA DE EIRS-ARETINA        public static SC_EIR ObtenerEirPorId(string idEir, string codigoDeposito)        {            SC_EIR result = null;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from eir in context.SC_EIR                                  where eir.ID_EIR == idEir && eir.COD_DEPOSITO == codigoDeposito                                  select eir).FirstOrDefault();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener el Eir del Sistema Sigeor Eir: " + idEir + " Deposito: " + codigoDeposito + "  " + ex, EventLogEntryType.Error);            }            return result;        }        public static List<SC_EIR> ObtenerEirs()        {            List<SC_EIR> result = null;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from eir in context.SC_EIR                                  select eir).ToList();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener los Eirs del Sistema Sigeor: " + ex, EventLogEntryType.Error);            }            return result;        }




        #endregion
        #region LECTURA DE PTIS-ARETINA
        public static SC_PTI ObtenerPtiPorId(string idEir, string codigoDeposito)        {            SC_PTI result = null;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from pti in context.SC_PTI                                  where pti.ID_EIR == idEir && pti.COD_DEPOSITO == codigoDeposito                                  select pti).FirstOrDefault();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener el Pti del Sistema Sigeor Eir: " + idEir + " Deposito: " + codigoDeposito + "  " + ex, EventLogEntryType.Error);            }            return result;        }        public static List<SC_PTI> ObtenerPtis()        {            List<SC_PTI> result = null;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from pti in context.SC_PTI                                  select pti).ToList();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener los Ptis del Sistema Sigeor: " + ex, EventLogEntryType.Error);            }            return result;        }




        #endregion
        #region LECTURA DE DEPOSITOS-ARETINA
        public static SM_DEPOSITO ObtenerDepositoPorId(string codDeposito)        {            SM_DEPOSITO result = null;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from dep in context.SM_DEPOSITO                                  where dep.COD_DEPOSITO == codDeposito                                  select dep).FirstOrDefault();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener el Deposito del Sistema Sigeor por Id: " + codDeposito + "   " + ex, EventLogEntryType.Error);            }            return result;        }        public static List<SM_DEPOSITO> ObtenerDepositos()        {            List<SM_DEPOSITO> result = null;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from dep in context.SM_DEPOSITO                                  select dep).ToList();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener los Depositos del Sistema Sigeor: " + ex, EventLogEntryType.Error);            }            return result;        }




        #endregion
        #region LECTURA DE DEPOSITOS-ARETINA
        public static SM_LINEA ObtenerLineaPorId(string codLinea)        {            SM_LINEA result = null;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from lin in context.SM_LINEA                                  where lin.COD_LINEA == codLinea                                  select lin).FirstOrDefault();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener la Linea del Sistema Sigeor por Id: " + codLinea + "   " + ex, EventLogEntryType.Error);            }            return result;        }        public static List<SM_LINEA> ObtenerLineas()        {            List<SM_LINEA> result = null;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from lin in context.SM_LINEA                                  select lin).ToList();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener las Lineas del Sistema Sigeor: " + ex, EventLogEntryType.Error);            }            return result;        }




        #endregion
        #region LECTURA DE TIPO DE COTAINERS-ARETINA
        public static SM_TIPCONTAINER ObtenerTipoContainerPorId(string codTipocontainer)        {            SM_TIPCONTAINER result = null;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from tipo in context.SM_TIPCONTAINER                                  where tipo.COD_TIPCONT == codTipocontainer                                  select tipo).FirstOrDefault();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener el Tipo de Container del Sistema Sigeor por Id: " + codTipocontainer + "   " + ex, EventLogEntryType.Error);            }            return result;        }        public static List<SM_TIPCONTAINER> ObtenerTipoContainers()        {            List<SM_TIPCONTAINER> result = null;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from tipo in context.SM_TIPCONTAINER                                  select tipo).ToList();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener los Tipos de Contenedores del Sistema Sigeor: " + ex, EventLogEntryType.Error);            }            return result;        }




        #endregion
        #region LECTURA DE TIPO DE CABECERA EGRESOS
        public static SInv_H_CEgrProducto ObtenerCabeceraEgresoPorEor(string numEor)        {            SInv_H_CEgrProducto result = null;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from tipo in context.SInv_H_CEgrProducto                                  where tipo.Num_Eor == numEor                                  select tipo).FirstOrDefault();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener la Cebecera del Egreso del Sistema Sigeor por Eor: " + numEor + "   " + ex, EventLogEntryType.Error);            }            return result;        }        public static List<SInv_H_CEgrProducto> ObtenerCabeceraEgresos()        {            List<SInv_H_CEgrProducto> result = null;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from tipo in context.SInv_H_CEgrProducto                                  select tipo).ToList();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener las Cabeceras de los Egresos del Sistema Sigeor: " + ex, EventLogEntryType.Error);            }            return result;        }




        #endregion
        #region LECTURA DE TIPO DE DETALLE EGRESOS
        public static List<SInv_H_DEgrProducto> ObtenerDetallesEgresoPorEor(string numEor)        {            List<SInv_H_DEgrProducto> result = null;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from cab in context.SInv_H_CEgrProducto                                  join det in context.SInv_H_DEgrProducto on cab.Id_EgrProducto equals det.Id_EgrProducto                                  where cab.Num_Eor == numEor                                  select det).ToList();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener el Detalle del Egreso del Sistema Sigeor por Eor: " + numEor + "   " + ex, EventLogEntryType.Error);            }            return result;        }        public static SInv_H_DEgrProducto ObtenerDetallesEgresoPorId(string idEgreso, int idSecuencial)        {            SInv_H_DEgrProducto result = null;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from detalleEgreso in context.SInv_H_DEgrProducto                                  where detalleEgreso.Id_EgrProducto == idEgreso && detalleEgreso.Id_SecEgreso == idSecuencial                                  select detalleEgreso).FirstOrDefault();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener el Detalle del Egreso del Sistema Sigeor por Id: " + idEgreso + " / " + idSecuencial + ex, EventLogEntryType.Error);            }            return result;        }        public static List<SInv_H_DEgrProducto> ObtenerDetalleEgresos()        {            List<SInv_H_DEgrProducto> result = null;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from cab in context.SInv_H_CEgrProducto                                  join det in context.SInv_H_DEgrProducto on cab.Id_EgrProducto equals det.Id_EgrProducto                                  select det).ToList();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener el Detalle de los Egresos del Sistema Sigeor: " + ex, EventLogEntryType.Error);            }            return result;        }




        #endregion
        #region LECTURA DE PRODUCTOS DETALLADOS EN EGRESOS
        public static List<SInv_M_Producto> ObtenerProductosEgresoPorEor(string numEor)        {            List<SInv_M_Producto> result = null;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from cab in context.SInv_H_CEgrProducto                                  join det in context.SInv_H_DEgrProducto on cab.Id_EgrProducto equals det.Id_EgrProducto                                  join prod in context.SInv_M_Producto on det.id_producto equals prod.id_Producto                                  where cab.Num_Eor == numEor                                  select prod).ToList();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener los productos del Detalle del Egreso del Sistema Sigeor por Eor: " + numEor + "   " + ex, EventLogEntryType.Error);            }            return result;        }        public static List<SInv_M_Producto> ObtenerProductosEgresos()        {            List<SInv_M_Producto> result = null;            try            {                var transactionOptions = new TransactionOptions                {                    IsolationLevel = System.Transactions.IsolationLevel.ReadUncommitted                };                using (var transactionScope = new TransactionScope(TransactionScopeOption.Required, transactionOptions))                {                    using (var context = new SigeorEntities())                    {                        result = (from cab in context.SInv_H_CEgrProducto                                  join det in context.SInv_H_DEgrProducto on cab.Id_EgrProducto equals det.Id_EgrProducto                                  join prod in context.SInv_M_Producto on det.id_producto equals prod.id_Producto                                  select prod).ToList();                    }                    transactionScope.Complete();                }            }            catch (Exception ex)            {                Log.WriteEntry("No se pudo obtener el Detalle de los Egresos del Sistema Sigeor: " + ex, EventLogEntryType.Error);            }            return result;        }


        #endregion
    }}