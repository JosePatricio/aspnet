//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sigeor.GestionControlServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GestionControlServiceReference.IControlService")]
    public interface IControlService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/CargarTipoDanios", ReplyAction="http://tempuri.org/IControlService/CargarTipoDaniosResponse")]
        string CargarTipoDanios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/CargarEstadosNegociaciones", ReplyAction="http://tempuri.org/IControlService/CargarEstadosNegociacionesResponse")]
        string CargarEstadosNegociaciones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/InsertarNegociacionLinea", ReplyAction="http://tempuri.org/IControlService/InsertarNegociacionLineaResponse")]
        void InsertarNegociacionLinea(string negociacionSerializada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ModificarNegociacionLinea", ReplyAction="http://tempuri.org/IControlService/ModificarNegociacionLineaResponse")]
        void ModificarNegociacionLinea(string negociacionSerializada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/EliminarNegociacionLinea", ReplyAction="http://tempuri.org/IControlService/EliminarNegociacionLineaResponse")]
        void EliminarNegociacionLinea(string negociacionSerializada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesLineaPorEstado", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesLineaPorEstadoResponse")]
        string ObtenerNegociacionesLineaPorEstado(bool estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesLinea", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesLineaResponse")]
        string ObtenerNegociacionesLinea();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesLineaPorCoincidencia", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesLineaPorCoincidenciaRespon" +
            "se")]
        string ObtenerNegociacionesLineaPorCoincidencia(string value, bool estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesLineaPorId", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesLineaPorIdResponse")]
        string ObtenerNegociacionesLineaPorId(string idSerialziado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ModificarNegociacionLineaMasivamente", ReplyAction="http://tempuri.org/IControlService/ModificarNegociacionLineaMasivamenteResponse")]
        void ModificarNegociacionLineaMasivamente(string value, bool estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesLineaPorEstadoPaginado", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesLineaPorEstadoPaginadoResp" +
            "onse")]
        string ObtenerNegociacionesLineaPorEstadoPaginado(out int totalRegistros, bool estado, int pageSize, int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesLineaPaginado", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesLineaPaginadoResponse")]
        string ObtenerNegociacionesLineaPaginado(out int totalRegistros, int pageSize, int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesLineaPorCoincidenciaPagina" +
            "do", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesLineaPorCoincidenciaPagina" +
            "doResponse")]
        string ObtenerNegociacionesLineaPorCoincidenciaPaginado(out int totalRegistros, string value, bool estado, int pagesize, int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesLineaHistoricoPaginado", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesLineaHistoricoPaginadoResp" +
            "onse")]
        string ObtenerNegociacionesLineaHistoricoPaginado(out int totalRegistros, string parametro, int pagesize, int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesLineaHistorico", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesLineaHistoricoResponse")]
        string ObtenerNegociacionesLineaHistorico(string parametro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesProveedorHistoricoPaginado" +
            "", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesProveedorHistoricoPaginado" +
            "Response")]
        string ObtenerNegociacionesProveedorHistoricoPaginado(out int totalRegistros, string parametro, int pagesize, int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesProveedorHistorico", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesProveedorHistoricoResponse" +
            "")]
        string ObtenerNegociacionesProveedorHistorico(string parametro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/InsertarNegociacionProveedor", ReplyAction="http://tempuri.org/IControlService/InsertarNegociacionProveedorResponse")]
        void InsertarNegociacionProveedor(string negociacionSerializada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ModificarNegociacionProveedor", ReplyAction="http://tempuri.org/IControlService/ModificarNegociacionProveedorResponse")]
        void ModificarNegociacionProveedor(string negociacionSerializada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/EliminarNegociacionProveedor", ReplyAction="http://tempuri.org/IControlService/EliminarNegociacionProveedorResponse")]
        void EliminarNegociacionProveedor(string negociacionSerializada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesProveedorPorEstado", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesProveedorPorEstadoResponse" +
            "")]
        string ObtenerNegociacionesProveedorPorEstado(bool estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesProveedor", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesProveedorResponse")]
        string ObtenerNegociacionesProveedor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesProveedorPorCoincidencia", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesProveedorPorCoincidenciaRe" +
            "sponse")]
        string ObtenerNegociacionesProveedorPorCoincidencia(string value, bool estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesProveedorPorId", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesProveedorPorIdResponse")]
        string ObtenerNegociacionesProveedorPorId(string idSerialziado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ModificarNegociacionProveedoresMasivamente", ReplyAction="http://tempuri.org/IControlService/ModificarNegociacionProveedoresMasivamenteResp" +
            "onse")]
        void ModificarNegociacionProveedoresMasivamente(string value, bool estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesProveedorPorEstadoPaginado" +
            "", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesProveedorPorEstadoPaginado" +
            "Response")]
        string ObtenerNegociacionesProveedorPorEstadoPaginado(out int totalRegistros, bool estado, int pageSize, int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesProveedorPaginado", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesProveedorPaginadoResponse")]
        string ObtenerNegociacionesProveedorPaginado(out int totalRegistros, int pageSize, int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerNegociacionesProveedorPorCoincidenciaPa" +
            "ginado", ReplyAction="http://tempuri.org/IControlService/ObtenerNegociacionesProveedorPorCoincidenciaPa" +
            "ginadoResponse")]
        string ObtenerNegociacionesProveedorPorCoincidenciaPaginado(out int totalRegistros, string value, bool estado, int pagesize, int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/InsertarDanio", ReplyAction="http://tempuri.org/IControlService/InsertarDanioResponse")]
        void InsertarDanio(string danioSerializado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ModificarDanio", ReplyAction="http://tempuri.org/IControlService/ModificarDanioResponse")]
        void ModificarDanio(string danioSerializado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ModificarDanioMasivo", ReplyAction="http://tempuri.org/IControlService/ModificarDanioMasivoResponse")]
        void ModificarDanioMasivo(string parametroDanio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/EliminarDanio", ReplyAction="http://tempuri.org/IControlService/EliminarDanioResponse")]
        void EliminarDanio(string danioSerializado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerDaniosPorEstado", ReplyAction="http://tempuri.org/IControlService/ObtenerDaniosPorEstadoResponse")]
        string ObtenerDaniosPorEstado(string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerDaniosPorEstadoPaginado", ReplyAction="http://tempuri.org/IControlService/ObtenerDaniosPorEstadoPaginadoResponse")]
        string ObtenerDaniosPorEstadoPaginado(out int totalRegistros, string estado, int pagesize, int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerDanios", ReplyAction="http://tempuri.org/IControlService/ObtenerDaniosResponse")]
        string ObtenerDanios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerDanioPorCodigo", ReplyAction="http://tempuri.org/IControlService/ObtenerDanioPorCodigoResponse")]
        string ObtenerDanioPorCodigo(string codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerDaniosPorCoincidencia", ReplyAction="http://tempuri.org/IControlService/ObtenerDaniosPorCoincidenciaResponse")]
        string ObtenerDaniosPorCoincidencia(string value, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerDaniosPorCoincidenciaPaginado", ReplyAction="http://tempuri.org/IControlService/ObtenerDaniosPorCoincidenciaPaginadoResponse")]
        string ObtenerDaniosPorCoincidenciaPaginado(out int totalRegistros, string value, string estado, int pagesize, int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerDaniosPorLinea", ReplyAction="http://tempuri.org/IControlService/ObtenerDaniosPorLineaResponse")]
        string ObtenerDaniosPorLinea(string idLinea, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerDanioPorIdLineaIdTipoDanio", ReplyAction="http://tempuri.org/IControlService/ObtenerDanioPorIdLineaIdTipoDanioResponse")]
        string ObtenerDanioPorIdLineaIdTipoDanio(string clavePrimaria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/InsertarReparacion", ReplyAction="http://tempuri.org/IControlService/InsertarReparacionResponse")]
        void InsertarReparacion(string reparacionSerializado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ModificarReparacion", ReplyAction="http://tempuri.org/IControlService/ModificarReparacionResponse")]
        void ModificarReparacion(string reparacionSerializado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ModificarReparacionMasivo", ReplyAction="http://tempuri.org/IControlService/ModificarReparacionMasivoResponse")]
        void ModificarReparacionMasivo(string parametroSerializado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/EliminarReparacion", ReplyAction="http://tempuri.org/IControlService/EliminarReparacionResponse")]
        void EliminarReparacion(string reparacionSerializado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerReparacionesPorEstado", ReplyAction="http://tempuri.org/IControlService/ObtenerReparacionesPorEstadoResponse")]
        string ObtenerReparacionesPorEstado(string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerReparaciones", ReplyAction="http://tempuri.org/IControlService/ObtenerReparacionesResponse")]
        string ObtenerReparaciones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerReparacionPorClave", ReplyAction="http://tempuri.org/IControlService/ObtenerReparacionPorClaveResponse")]
        string ObtenerReparacionPorClave(string clavePrimaria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerReparacionesPorCoincidencia", ReplyAction="http://tempuri.org/IControlService/ObtenerReparacionesPorCoincidenciaResponse")]
        string ObtenerReparacionesPorCoincidencia(string value, string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerReparacionesPorIdLinea", ReplyAction="http://tempuri.org/IControlService/ObtenerReparacionesPorIdLineaResponse")]
        string ObtenerReparacionesPorIdLinea(string clavePrimaria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerReparacionesPorCoincidenciaPaginado", ReplyAction="http://tempuri.org/IControlService/ObtenerReparacionesPorCoincidenciaPaginadoResp" +
            "onse")]
        string ObtenerReparacionesPorCoincidenciaPaginado(out int totalRegistro, string value, string estado, int pagesize, int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/InsertarComponente", ReplyAction="http://tempuri.org/IControlService/InsertarComponenteResponse")]
        void InsertarComponente(string componenteSerializado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ModificarComponente", ReplyAction="http://tempuri.org/IControlService/ModificarComponenteResponse")]
        void ModificarComponente(string componenteSerializado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/EliminarComponente", ReplyAction="http://tempuri.org/IControlService/EliminarComponenteResponse")]
        void EliminarComponente(string componenteSerializado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerComponentesPorEstado", ReplyAction="http://tempuri.org/IControlService/ObtenerComponentesPorEstadoResponse")]
        string ObtenerComponentesPorEstado(string estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlService/ObtenerInspectoresPorEstado", ReplyAction="http://tempuri.org/IControlService/ObtenerInspectoresPorEstadoResponse")]
        string ObtenerInspectoresPorEstado(string estado);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IControlServiceChannel : Sigeor.GestionControlServiceReference.IControlService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ControlServiceClient : System.ServiceModel.ClientBase<Sigeor.GestionControlServiceReference.IControlService>, Sigeor.GestionControlServiceReference.IControlService {
        
        public ControlServiceClient() {
        }
        
        public ControlServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ControlServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ControlServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ControlServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string CargarTipoDanios() {
            return base.Channel.CargarTipoDanios();
        }
        
        public string CargarEstadosNegociaciones() {
            return base.Channel.CargarEstadosNegociaciones();
        }
        
        public void InsertarNegociacionLinea(string negociacionSerializada) {
            base.Channel.InsertarNegociacionLinea(negociacionSerializada);
        }
        
        public void ModificarNegociacionLinea(string negociacionSerializada) {
            base.Channel.ModificarNegociacionLinea(negociacionSerializada);
        }
        
        public void EliminarNegociacionLinea(string negociacionSerializada) {
            base.Channel.EliminarNegociacionLinea(negociacionSerializada);
        }
        
        public string ObtenerNegociacionesLineaPorEstado(bool estado) {
            return base.Channel.ObtenerNegociacionesLineaPorEstado(estado);
        }
        
        public string ObtenerNegociacionesLinea() {
            return base.Channel.ObtenerNegociacionesLinea();
        }
        
        public string ObtenerNegociacionesLineaPorCoincidencia(string value, bool estado) {
            return base.Channel.ObtenerNegociacionesLineaPorCoincidencia(value, estado);
        }
        
        public string ObtenerNegociacionesLineaPorId(string idSerialziado) {
            return base.Channel.ObtenerNegociacionesLineaPorId(idSerialziado);
        }
        
        public void ModificarNegociacionLineaMasivamente(string value, bool estado) {
            base.Channel.ModificarNegociacionLineaMasivamente(value, estado);
        }
        
        public string ObtenerNegociacionesLineaPorEstadoPaginado(out int totalRegistros, bool estado, int pageSize, int pageIndex) {
            return base.Channel.ObtenerNegociacionesLineaPorEstadoPaginado(out totalRegistros, estado, pageSize, pageIndex);
        }
        
        public string ObtenerNegociacionesLineaPaginado(out int totalRegistros, int pageSize, int pageIndex) {
            return base.Channel.ObtenerNegociacionesLineaPaginado(out totalRegistros, pageSize, pageIndex);
        }
        
        public string ObtenerNegociacionesLineaPorCoincidenciaPaginado(out int totalRegistros, string value, bool estado, int pagesize, int pageIndex) {
            return base.Channel.ObtenerNegociacionesLineaPorCoincidenciaPaginado(out totalRegistros, value, estado, pagesize, pageIndex);
        }
        
        public string ObtenerNegociacionesLineaHistoricoPaginado(out int totalRegistros, string parametro, int pagesize, int pageIndex) {
            return base.Channel.ObtenerNegociacionesLineaHistoricoPaginado(out totalRegistros, parametro, pagesize, pageIndex);
        }
        
        public string ObtenerNegociacionesLineaHistorico(string parametro) {
            return base.Channel.ObtenerNegociacionesLineaHistorico(parametro);
        }
        
        public string ObtenerNegociacionesProveedorHistoricoPaginado(out int totalRegistros, string parametro, int pagesize, int pageIndex) {
            return base.Channel.ObtenerNegociacionesProveedorHistoricoPaginado(out totalRegistros, parametro, pagesize, pageIndex);
        }
        
        public string ObtenerNegociacionesProveedorHistorico(string parametro) {
            return base.Channel.ObtenerNegociacionesProveedorHistorico(parametro);
        }
        
        public void InsertarNegociacionProveedor(string negociacionSerializada) {
            base.Channel.InsertarNegociacionProveedor(negociacionSerializada);
        }
        
        public void ModificarNegociacionProveedor(string negociacionSerializada) {
            base.Channel.ModificarNegociacionProveedor(negociacionSerializada);
        }
        
        public void EliminarNegociacionProveedor(string negociacionSerializada) {
            base.Channel.EliminarNegociacionProveedor(negociacionSerializada);
        }
        
        public string ObtenerNegociacionesProveedorPorEstado(bool estado) {
            return base.Channel.ObtenerNegociacionesProveedorPorEstado(estado);
        }
        
        public string ObtenerNegociacionesProveedor() {
            return base.Channel.ObtenerNegociacionesProveedor();
        }
        
        public string ObtenerNegociacionesProveedorPorCoincidencia(string value, bool estado) {
            return base.Channel.ObtenerNegociacionesProveedorPorCoincidencia(value, estado);
        }
        
        public string ObtenerNegociacionesProveedorPorId(string idSerialziado) {
            return base.Channel.ObtenerNegociacionesProveedorPorId(idSerialziado);
        }
        
        public void ModificarNegociacionProveedoresMasivamente(string value, bool estado) {
            base.Channel.ModificarNegociacionProveedoresMasivamente(value, estado);
        }
        
        public string ObtenerNegociacionesProveedorPorEstadoPaginado(out int totalRegistros, bool estado, int pageSize, int pageIndex) {
            return base.Channel.ObtenerNegociacionesProveedorPorEstadoPaginado(out totalRegistros, estado, pageSize, pageIndex);
        }
        
        public string ObtenerNegociacionesProveedorPaginado(out int totalRegistros, int pageSize, int pageIndex) {
            return base.Channel.ObtenerNegociacionesProveedorPaginado(out totalRegistros, pageSize, pageIndex);
        }
        
        public string ObtenerNegociacionesProveedorPorCoincidenciaPaginado(out int totalRegistros, string value, bool estado, int pagesize, int pageIndex) {
            return base.Channel.ObtenerNegociacionesProveedorPorCoincidenciaPaginado(out totalRegistros, value, estado, pagesize, pageIndex);
        }
        
        public void InsertarDanio(string danioSerializado) {
            base.Channel.InsertarDanio(danioSerializado);
        }
        
        public void ModificarDanio(string danioSerializado) {
            base.Channel.ModificarDanio(danioSerializado);
        }
        
        public void ModificarDanioMasivo(string parametroDanio) {
            base.Channel.ModificarDanioMasivo(parametroDanio);
        }
        
        public void EliminarDanio(string danioSerializado) {
            base.Channel.EliminarDanio(danioSerializado);
        }
        
        public string ObtenerDaniosPorEstado(string estado) {
            return base.Channel.ObtenerDaniosPorEstado(estado);
        }
        
        public string ObtenerDaniosPorEstadoPaginado(out int totalRegistros, string estado, int pagesize, int pageIndex) {
            return base.Channel.ObtenerDaniosPorEstadoPaginado(out totalRegistros, estado, pagesize, pageIndex);
        }
        
        public string ObtenerDanios() {
            return base.Channel.ObtenerDanios();
        }
        
        public string ObtenerDanioPorCodigo(string codigo) {
            return base.Channel.ObtenerDanioPorCodigo(codigo);
        }
        
        public string ObtenerDaniosPorCoincidencia(string value, string estado) {
            return base.Channel.ObtenerDaniosPorCoincidencia(value, estado);
        }
        
        public string ObtenerDaniosPorCoincidenciaPaginado(out int totalRegistros, string value, string estado, int pagesize, int pageIndex) {
            return base.Channel.ObtenerDaniosPorCoincidenciaPaginado(out totalRegistros, value, estado, pagesize, pageIndex);
        }
        
        public string ObtenerDaniosPorLinea(string idLinea, string estado) {
            return base.Channel.ObtenerDaniosPorLinea(idLinea, estado);
        }
        
        public string ObtenerDanioPorIdLineaIdTipoDanio(string clavePrimaria) {
            return base.Channel.ObtenerDanioPorIdLineaIdTipoDanio(clavePrimaria);
        }
        
        public void InsertarReparacion(string reparacionSerializado) {
            base.Channel.InsertarReparacion(reparacionSerializado);
        }
        
        public void ModificarReparacion(string reparacionSerializado) {
            base.Channel.ModificarReparacion(reparacionSerializado);
        }
        
        public void ModificarReparacionMasivo(string parametroSerializado) {
            base.Channel.ModificarReparacionMasivo(parametroSerializado);
        }
        
        public void EliminarReparacion(string reparacionSerializado) {
            base.Channel.EliminarReparacion(reparacionSerializado);
        }
        
        public string ObtenerReparacionesPorEstado(string estado) {
            return base.Channel.ObtenerReparacionesPorEstado(estado);
        }
        
        public string ObtenerReparaciones() {
            return base.Channel.ObtenerReparaciones();
        }
        
        public string ObtenerReparacionPorClave(string clavePrimaria) {
            return base.Channel.ObtenerReparacionPorClave(clavePrimaria);
        }
        
        public string ObtenerReparacionesPorCoincidencia(string value, string estado) {
            return base.Channel.ObtenerReparacionesPorCoincidencia(value, estado);
        }
        
        public string ObtenerReparacionesPorIdLinea(string clavePrimaria) {
            return base.Channel.ObtenerReparacionesPorIdLinea(clavePrimaria);
        }
        
        public string ObtenerReparacionesPorCoincidenciaPaginado(out int totalRegistro, string value, string estado, int pagesize, int pageIndex) {
            return base.Channel.ObtenerReparacionesPorCoincidenciaPaginado(out totalRegistro, value, estado, pagesize, pageIndex);
        }
        
        public void InsertarComponente(string componenteSerializado) {
            base.Channel.InsertarComponente(componenteSerializado);
        }
        
        public void ModificarComponente(string componenteSerializado) {
            base.Channel.ModificarComponente(componenteSerializado);
        }
        
        public void EliminarComponente(string componenteSerializado) {
            base.Channel.EliminarComponente(componenteSerializado);
        }
        
        public string ObtenerComponentesPorEstado(string estado) {
            return base.Channel.ObtenerComponentesPorEstado(estado);
        }
        
        public string ObtenerInspectoresPorEstado(string estado) {
            return base.Channel.ObtenerInspectoresPorEstado(estado);
        }
    }
}
